<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.7</version>
    </parent>

    <groupId>ee.openeid.siga</groupId>
    <artifactId>siga-parent</artifactId>
    <version>2.6.1</version>
    <packaging>pom</packaging>
    <name>Signature Gateway</name>

    <modules>
        <module>siga-common</module>
        <module>siga-webapp</module>
        <module>siga-auth</module>
        <module>siga-session-storage</module>
        <module>siga-signature-service</module>
        <module>siga-test</module>
        <module>siga-monitoring</module>
    </modules>

    <properties>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.exclusions>
            **/ee/openeid/siga/webapp/json/*,
            **/ee/openeid/siga/client/**/*,
            **/ee/openeid/siga/service/signature/configuration/*,
            **/ee/openeid/siga/mobileid/model/mid/*,
            **/ee/openeid/siga/common/model/*,
            **/ee/openeid/siga/common/exception/*
        </sonar.exclusions>
        <sonar.language>java</sonar.language>

        <awaitility.version>4.2.0</awaitility.version>
        <bouncycastle.version>1.70</bouncycastle.version>
        <commons-compress.version>1.22</commons-compress.version>
        <digidoc4j.version>5.0.0</digidoc4j.version>
        <guava.version>31.1-jre</guava.version>
        <h2.version>2.1.214</h2.version>
        <ignite.version>2.14.0</ignite.version>
        <javax.ws.rs-api.version>2.1.1</javax.ws.rs-api.version>
        <jaxb-runtime.version>4.0.1</jaxb-runtime.version>
        <json.version>20220924</json.version>
        <logback-classic.version>1.2.11</logback-classic.version>

        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
        <cxf-wadl2java-plugin.version>3.5.5</cxf-wadl2java-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <spring-boot.build-image.builder>paketobuildpacks/builder:tiny</spring-boot.build-image.builder>
        <spring-boot.build-image.imageName>${project.artifactId}:latest</spring-boot.build-image.imageName>

        <!-- Override vulnerable dependencies that are pulled in via Spring boot -->
        <!-- TODO: Amend this list when Spring Boot version is updated! -->
        <snakeyaml.version>1.33</snakeyaml.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>
        <dependency>
            <groupId>co.elastic.logging</groupId>
            <artifactId>logback-ecs-encoder</artifactId>
            <version>1.5.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <includeTransitiveDependencies>false</includeTransitiveDependencies>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED
                        --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
                        --add-exports=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED
                        --add-exports=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
                        --add-exports=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED
                        --illegal-access=permit
                        ${argLine}
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.7</version>
                <executions>
                    <execution>
                        <id>jacoco-initializ</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
